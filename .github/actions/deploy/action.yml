name: Deploy
description: Deploy to an environment
inputs:
  environment:
    description: The Environment we are deploying to, e.g. Staging
    required: true
  aws-account-id:
    description: The AWS Account ID into which the application will be deployed.
    required: true
  aws-region:
    description: The AWS Region into which the application will be deployed.
    required: true
  terraform-backend-vars-file:
    description: The terraform backend variables file to use when initializing terraform. Relative to the ./terraform/environments folder.
    required: true
  terraform-variables-file:
    description: The terraform variables file to use when deploying the application. Relative to the ./terraform/environments folder.
    required: true
  application-version:
    description: The version number to pass to terraform.
    required: true
runs:
  using: composite
  steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Terraform Initialization
      shell: bash
      working-directory: publish/terraform
      env:
        TERRAFORM_BACKEND_VARS_FILE: ./environments/${{ inputs.terraform-backend-vars-file }}
      run: terraform init --backend-config="$TERRAFORM_BACKEND_VARS_FILE" -input=false
    - name: Terraform Plan
      shell: bash
      working-directory: publish/terraform
      env:
        TERRAFORM_VARS_FILE: ./environments/${{ inputs.terraform-variables-file }}
        TF_VAR_application-version: ${{ inputs.application-version }}
        TF_VAR_new-relic-license-key: ${{ inputs.new-relic-license-key }}
      run: terraform plan -var-file="$TERRAFORM_VARS_FILE" -input=false
    - name: Terraform Apply
      shell: bash
      working-directory: publish/terraform
      env:
        TERRAFORM_VARS_FILE: ./environments/${{ inputs.terraform-variables-file }}
        TF_VAR_application-version: ${{ inputs.application-version }}
        TF_VAR_new-relic-license-key: ${{ inputs.new-relic-license-key }}
      run: terraform apply -var-file="$TERRAFORM_VARS_FILE" -auto-approve -input=false
