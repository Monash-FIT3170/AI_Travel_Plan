name: Build and Deploy
on: push
concurrency: ${{ github.ref }}
jobs:
  calculate-version:
    name: Calculate release version
    runs-on: ubuntu-latest
    env:
      MAJOR: 1
      MINOR: 0
    outputs:
      version: ${{ steps.create_version.outputs.VERSION }}
    steps:
      - id: create_version
        run: |
          VERSION=${MAJOR}.${MINOR}.${GITHUB_RUN_NUMBER}
          echo "$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
  build:
    name: Build
    needs:
      - calculate-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Docker BuildX
        run: |
          docker buildx create --use --driver=docker-container
      - name: Build
        env:
          version: ${{ needs.calculate-version.outputs.version }}
        run: docker buildx bake --set *.cache-from="type=gha" --set *.cache-to="type=gha,mode=max" --progress plain --load
      - name: Test
        timeout-minutes: 10
        env:
          version: ${{ needs.calculate-version.outputs.version }}
        run: docker compose up tests --no-build --abort-on-container-exit
      - name: Create publish folder
        run: mkdir publish
      - name: Publish Docker Images
        if: github.ref == 'refs/heads/main'
        run: docker save $(docker images --format '{{.Repository}}:{{.Tag}}' | gzip > publish/docker-images.tar.gz
      - name: Publish Artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: publish