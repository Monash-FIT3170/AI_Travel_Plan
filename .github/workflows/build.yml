name: Build and Deploy
on: push
concurrency: ${{ github.ref }}
jobs:
  calculate-version:
    name: Calculate release version
    runs-on: ubuntu-latest
    env:
      MAJOR: 1
      MINOR: 0
    outputs:
      version: ${{ steps.create_version.outputs.VERSION }}
    steps:
      - id: create_version
        run: |
          VERSION=${MAJOR}.${MINOR}.${GITHUB_RUN_NUMBER}
          echo "$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
  build:
    name: Build
    needs:
      - calculate-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Registry Login
        run: echo "${{ secrets.GPR_PAT_TOKEN }}" | docker login ghcr.io -u csnopsteam --password-stdin
      - name: Configure Docker BuildX
        run: |
          export ACTIONS_CACHE_URL=$(echo "$ACTIONS_ID_TOKEN_REQUEST_URL" | grep -Po 'https://[^/]+/[^/]+/' | sed  's/pipelines/artifactcache/')
          export ACTIONS_RUNTIME_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
          docker buildx create --use --driver=docker-container
      - name: Build
        env:
          version: ${{ needs.calculate-version.outputs.version }}
          GPR_USERNAME: csnopsteam
          GPR_TOKEN: ${{ secrets.GPR_PAT_TOKEN }}
        run: docker buildx bake --set *.cache-from="type=gha" --set *.cache-to="type=gha,mode=max" --progress plain --load
      - name: Test
        timeout-minutes: 10
        env:
          version: ${{ needs.calculate-version.outputs.version }}
        run: docker compose up tests --no-build --abort-on-container-exit
      - name: Create publish folder
        run: mkdir publish
      - name: Publish Docker Images
        if: github.ref == 'refs/heads/main'
        run: docker save $(docker images --format '{{.Repository}}:{{.Tag}}' | grep ghcr.io/carsales-private/core/lead) | gzip > publish/docker-images.tar.gz
      - name: Publish Terraform
        if: github.ref == 'refs/heads/main'
        run: cp -r terraform publish/terraform
      - name: Publish Artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: publish
  deploy-global:
    name: Deploy Global Artifacts
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Load Docker Images
        run: docker load -i publish/docker-images.tar.gz
      - name: Docker Registry Login
        run: echo "${{ secrets.GPR_PAT_TOKEN }}" | docker login ghcr.io -u csnopsteam --password-stdin
      - name: Push Docker images
        run: docker images --format '{{.Repository}}:{{.Tag}}' | grep ghcr.io/carsales-private/core/lead | xargs -L1 docker push
  await-staging-approval:
    name: Await Approval for Staging Deployment
    environment: Staging
    needs:
      - deploy-global
    runs-on: ubuntu-latest
    steps:
      - name: Empty step
        if: 0 == 1
        run: echo Empty step
  deploy-staging-oregon:
    name: Deploy Staging Oregon
    needs:
      - calculate-version
      - deploy-global
      - await-staging-approval
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Deploy
        uses: ./.github/actions/deploy/
        with:
          environment: LATAM.Staging
          aws-account-id: 622603323723
          aws-region: us-west-2
          terraform-backend-vars-file: staging-oregon.backend.tfvars
          terraform-variables-file: staging-oregon.tfvars
          application-version: ${{ needs.calculate-version.outputs.version }}
          new-relic-license-key: ${{ secrets.NEW_RELIC_KEY_COREGADGETS_STAGING }}
  deploy-staging-australia:
    name: Deploy Staging Australia
    needs:
      - calculate-version
      - deploy-global
      - await-staging-approval
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Deploy
        uses: ./.github/actions/deploy/
        with:
          environment: AU.Staging
          aws-account-id: 622603323723
          aws-region: ap-southeast-2
          terraform-backend-vars-file: staging-australia.backend.tfvars
          terraform-variables-file: staging-australia.tfvars
          application-version: ${{ needs.calculate-version.outputs.version }}
          new-relic-license-key: ${{ secrets.NEW_RELIC_KEY_COREGADGETS_STAGING }}
  await-production-approval:
    name: Await Approval for Production Deployment
    environment: Production
    needs:
      - deploy-staging-oregon
      - deploy-staging-australia
    runs-on: ubuntu-latest
    steps:
      - name: Empty step
        if: 0 == 1
        run: echo Empty step
  deploy-production-oregon:
    name: Deploy Production Oregon
    needs:
      - calculate-version
      - await-production-approval
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Deploy
        uses: ./.github/actions/deploy/
        with:
          environment: LATAM.Production
          aws-account-id: 741924789043
          aws-region: us-west-2
          terraform-backend-vars-file: production-oregon.backend.tfvars
          terraform-variables-file: production-oregon.tfvars
          application-version: ${{ needs.calculate-version.outputs.version }}
          new-relic-license-key: ${{ secrets.NEW_RELIC_KEY_COREGADGETS_PRODUCTION }}
  deploy-production-australia:
    name: Deploy Production Australia
    needs:
      - calculate-version
      - await-production-approval
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Deploy
        uses: ./.github/actions/deploy/
        with:
          environment: AU.Production
          aws-account-id: 741924789043
          aws-region: ap-southeast-2
          terraform-backend-vars-file: production-australia.backend.tfvars
          terraform-variables-file: production-australia.tfvars
          application-version: ${{ needs.calculate-version.outputs.version }}
          new-relic-license-key: ${{ secrets.NEW_RELIC_KEY_COREGADGETS_PRODUCTION }}
